#!/usr/bin/env ruby
class Jar
  def initialize(path)
    @path = path
  end

  def fork(*args)
    Kernel.fork { exec *command(args) }
  end

  def run(*args)
    system *command(args)
  end

  private

  def command(args)
    ['java', '-cp', full_path] + args.map { |arg| arg.to_s }
  end

  def full_path
    File.expand_path(File.join(File.dirname(__FILE__), '..', 'resources', 'jsettlers-1.0.6', @path))
  end
end

class Game
  def initialize(host='localhost', port=8880)
    @host, @port = host, port
    @pids = []
  end

  def play
    launch_server
    launch_robots
    launch_player

    clean_up_processes
  end

  private

  def launch_server
    @pids.unshift server.fork('soc.server.SOCServer', @port, 10, 'root', '')
    sleep 5
  end

  def launch_robots
    3.times do |num|
      @pids.unshift server.fork('soc.robot.SOCRobotClient', @host, @port, "Robot#{num}", '')
    end
  end

  def launch_player
    client.run('soc.client.SOCPlayerClient', @host, @port)
  end

  def clean_up_processes
    Process.kill 'INT', *@pids
  end

  def server
    Jar.new('JSettlersServer.jar')
  end

  def client
    Jar.new('JSettlers.jar')
  end
end

if __FILE__ == $0
  Game.new.play
end